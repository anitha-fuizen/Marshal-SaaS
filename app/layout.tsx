import type { Metadata } from "next";

import "./globals.css";
import {Inter} from "next/font/google"


import { Navbar } from "@/components/Navbar";
import { ThemeProvider } from "@/components/Theme-provider";
import prisma from "./lib/db";
import { getKindeServerSession } from "@kinde-oss/kinde-auth-nextjs/server";

 const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getData(id: string) {
  if(id){
  try {
    const data = await prisma.user.findUnique({
      where: { id: id },
      select: { colorScheme: true },
    });
    return data;
  } catch (error) {
    console.error("Error fetching data from Prisma:", error);
    return null;
  }}
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const {getUser} =getKindeServerSession()
  const user= await getUser();
  const data= await getData(user?.id as string) 
  
  return (
    <html lang="en">
      <body className={`${inter.className} ${data?.colorScheme ?? 'theme-orange'}`} >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <Navbar />
          {children}
        </ThemeProvider>
      </body>
    </html>
  );
}